import"dotenv/config";import Ee from"express";import{jwtDecode as ze}from"jwt-decode";import{drizzle as je}from"drizzle-orm/node-postgres";import{Pool as Pe}from"pg";var Re=new Pe({connectionString:process.env.DATABASE_URL}),a=je(Re);import{and as h,eq as d}from"drizzle-orm";import{sql as ve}from"drizzle-orm";import{foreignKey as z,pgTable as D,uuid as E,varchar as S}from"drizzle-orm/pg-core";import{pgTable as xe,uuid as Ue,varchar as x}from"drizzle-orm/pg-core";var m=xe("users",{id:Ue("id").primaryKey().defaultRandom(),name:x("name",{length:255}).notNull(),email:x("email",{length:255}).notNull().unique(),password:x("password",{length:255}).notNull()});var c=D("estoques",{id:E("id").primaryKey().defaultRandom(),name:S("name",{length:255}).notNull(),codigo:S("codigo",{length:50}).notNull().unique().default(ve`floor(random()*9000 + 1000)::int`)}),n=D("estoque_users",{id:E("id").primaryKey().defaultRandom(),estoqueId:E("estoque_id").notNull(),userId:E("user_id").notNull()},t=>({fkEstoque:z({columns:[t.estoqueId],foreignColumns:[c.id],name:"fk_estoque_users_estoque"}),fkUser:z({columns:[t.userId],foreignColumns:[m.id],name:"fk_estoque_users_user"})}));import{foreignKey as Ne,integer as U,pgTable as be,uuid as A,varchar as v}from"drizzle-orm/pg-core";var i=be("produtos",{id:A("id").primaryKey().defaultRandom(),name:v("name",{length:255}).notNull(),image:v("image",{length:255}),barcode:v("barcode",{length:50}).unique(),price:U("price").notNull(),quantity:U("quantity").notNull().default(0),minStock:U("min_stock").notNull().default(0),estoqueId:A("estoque_id").notNull()},t=>({fkEstoque:Ne({columns:[t.estoqueId],foreignColumns:[c.id],name:"fk_produtos_estoque"})}));var T=async(t,e,o,r,s,u,g)=>{let[I]=await a.insert(i).values({name:t,image:e,barcode:o,price:r,quantity:s,minStock:u,estoqueId:g}).returning();if(!I)throw new Error("Failed to create product");return{product:I}},_=async t=>({products:(await a.select().from(i).innerJoin(n,d(i.estoqueId,n.estoqueId)).where(d(n.userId,t))).map(o=>o.produtos)}),J=async(t,e)=>({products:(await a.select().from(i).innerJoin(n,d(i.estoqueId,n.estoqueId)).where(h(d(i.estoqueId,t),d(n.userId,e)))).map(r=>r.produtos)}),B=async(t,e)=>{let[o]=await a.select().from(i).innerJoin(n,d(i.estoqueId,n.estoqueId)).where(h(d(i.id,t),d(n.userId,e)));if(!o)throw new Error("Product not found or user not authorized");return{product:o.produtos}},Q=async(t,e,o)=>{if((await a.select().from(i).innerJoin(n,d(i.estoqueId,n.estoqueId)).where(h(d(i.id,t),d(n.userId,o))).limit(1)).length===0)throw new Error("Product not found or user not authorized");return{product:(await a.update(i).set(e).where(d(i.id,t)).returning())[0]}},C=async(t,e)=>{if((await a.select().from(i).innerJoin(n,d(i.estoqueId,n.estoqueId)).where(h(d(i.id,t),d(n.userId,e))).limit(1)).length===0)throw new Error("Product not found or user not authorized");return await a.delete(i).where(d(i.id,t)),{message:"Product deleted successfully"}},K=async(t,e,o)=>{let r=await a.select().from(i).innerJoin(n,d(i.estoqueId,n.estoqueId)).where(h(d(i.id,t),d(n.userId,o))).limit(1);if(r.length===0)throw new Error("Product not found or user not authorized");let s=r[0].produtos.quantity;return{product:(await a.update(i).set({quantity:s+Number(e)}).where(d(i.id,t)).returning())[0]}},F=async(t,e,o)=>{let r=await a.select().from(i).innerJoin(n,d(i.estoqueId,n.estoqueId)).where(h(d(i.id,t),d(n.userId,o))).limit(1);if(r.length===0)throw new Error("Product not found or user not authorized");let s=r[0].produtos.quantity;return{product:(await a.update(i).set({quantity:s-Number(e)}).where(d(i.id,t)).returning())[0]}};var f=t=>ze(t).id,W=async(t,e)=>{let{name:o,image:r,barcode:s,price:u,quantity:g,minStock:I,estoqueId:k}=t.body;if(!o||!u||!g||!I||!k)return e.status(400).json({error:"Name, price, quantity, minStock, and estoqueId are required."});try{let{product:R}=await T(o,r,s,u,g,I,k);e.status(201).json({product:R})}catch(R){e.status(500).json({error:R})}},O=async(t,e)=>{let o=f(t.headers.authorization?.split(" ")[1]||"");if(!o)return e.status(400).json({error:"User ID is required."});try{let{products:r}=await _(o);e.status(200).json({products:r})}catch(r){e.status(500).json({error:r})}},H=async(t,e)=>{let{estoqueId:o}=t.params,r=f(t.headers.authorization?.split(" ")[1]||"");if(!o||!r)return e.status(400).json({error:"Estoque ID and User ID are required."});try{let{products:s}=await J(o,r);e.status(200).json({products:s})}catch(s){e.status(500).json({error:s})}},L=async(t,e)=>{let{productId:o}=t.params,r=f(t.headers.authorization?.split(" ")[1]||"");if(!o||!r)return e.status(400).json({error:"Product ID and User ID are required."});try{let s=await B(o,r);e.status(200).json({product:s})}catch(s){e.status(500).json({error:s})}},$=async(t,e)=>{let{productId:o}=t.params,r=f(t.headers.authorization?.split(" ")[1]||""),s=t.body;if(!o||!r)return e.status(400).json({error:"Product ID and User ID are required."});try{let{product:u}=await Q(o,s,r);e.status(200).json({product:u})}catch(u){e.status(500).json({error:u})}},G=async(t,e)=>{let{productId:o}=t.params,r=f(t.headers.authorization?.split(" ")[1]||"");if(!o||!r)return e.status(400).json({error:"Product ID and User ID are required."});try{await C(o,r),e.status(204).json({message:"Product deleted successfully."})}catch(s){e.status(500).json({error:s})}},M=async(t,e)=>{let{id:o}=t.params,r=f(t.headers.authorization?.split(" ")[1]||""),{quantity:s}=t.body;if(!o||!r||s===void 0)return e.status(400).json({error:"Product ID, User ID, and quantity are required."});try{let{product:u}=await K(o,s,r);e.status(200).json({product:u})}catch(u){console.error("Error incrementing product quantity:",u),e.status(500).json({error:u})}},V=async(t,e)=>{let{id:o}=t.params,r=f(t.headers.authorization?.split(" ")[1]||""),{quantity:s}=t.body;if(!o||!r||s===void 0)return e.status(400).json({error:"Product ID, User ID, and quantity are required."});try{let{product:u}=await F(o,s,r);e.status(200).json({product:u})}catch(u){e.status(500).json({error:u})}};import Ae from"express";import{jwtDecode as De}from"jwt-decode";import{and as j,eq as p}from"drizzle-orm";var X=async(t,e)=>{let[o]=await a.insert(c).values({name:t}).returning();return await a.insert(n).values({estoqueId:o.id,userId:e}),{estoque:o}},Y=async(t,e)=>{let[o]=await a.select().from(c).where(p(c.codigo,t));if(!o)throw new Error("Estoque not found");let[r]=await a.select().from(n).where(j(p(n.estoqueId,o.id),p(n.userId,e)));if(r)throw new Error("User already joined this estoque");return await a.insert(n).values({estoqueId:o.id,userId:e}),{estoque:o}},Z=async t=>({estoques:(await a.select().from(c).innerJoin(n,p(c.id,n.estoqueId)).where(p(n.userId,t)).orderBy(c.name)).map(o=>o.estoques)}),ee=async(t,e)=>{let[o]=await a.select().from(c).innerJoin(n,p(c.id,n.estoqueId)).where(j(p(c.id,t),p(n.userId,e)));if(!o)throw new Error("Estoque not found or user not authorized");return o.estoques},te=async(t,e,o)=>{let[r]=await a.select().from(c).innerJoin(n,p(c.id,t)).where(j(p(c.id,t),p(n.userId,o)));if(!r)throw new Error("Estoque not found or user not authorized");return await a.update(c).set({name:e}).where(p(c.id,r.estoques.id)),r},oe=async(t,e)=>{let[o]=await a.select().from(c).innerJoin(n,p(c.id,n.estoqueId)).where(j(p(c.id,t),p(n.userId,e)));if(!o)throw new Error("Estoque not found or user not authorized");return await a.delete(n).where(p(n.estoqueId,o.estoques.id)),await a.delete(i).where(p(i.estoqueId,o.estoques.id)),await a.delete(c).where(p(c.id,o.estoques.id)),{message:"Estoque deleted successfully"}};var w=t=>De(t).id,re=async(t,e)=>{let o=w(t.headers.authorization?.split(" ")[1]||""),{name:r}=t.body;if(!o)return e.status(401).json({error:"Unauthorized. No user ID found in token."});if(!r)return e.status(400).json({error:"Name is required."});try{let{estoque:s}=await X(r,o);e.status(201).json({id:s.id,name:s.name,codigo:s.codigo})}catch(s){e.status(500).json({error:s})}},se=async(t,e)=>{let o=w(t.headers.authorization?.split(" ")[1]||""),{codigo:r}=t.body;if(!o)return e.status(401).json({error:"Unauthorized. No user ID found in token."});if(!r)return e.status(400).json({error:"Codigo is required."});try{let{estoque:s}=await Y(r,o);e.status(200).json({message:"Acesso concedido ao estoque",estoque:{id:s.id,name:s.name,codigo:s.codigo}})}catch(s){e.status(500).json({error:s})}},ne=async(t,e)=>{let o=w(t.headers.authorization?.split(" ")[1]||"");if(!o)return e.status(401).json({error:"Unauthorized. No user ID found in token."});try{let{estoques:r}=await Z(o);e.status(200).json({estoques:r})}catch(r){e.status(500).json({error:r})}},ue=async(t,e)=>{let o=w(t.headers.authorization?.split(" ")[1]||""),{estoqueId:r}=t.params;if(!r)return e.status(400).json({error:"Estoque ID is required."});try{let s=await ee(r,o);e.status(200).json({estoque:{id:s.id,name:s.name,codigo:s.codigo}})}catch(s){e.status(404).json({error:s})}},ie=async(t,e)=>{let o=w(t.headers.authorization?.split(" ")[1]||""),{estoqueId:r}=t.params,{name:s}=t.body;if(!o)return e.status(401).json({error:"Unauthorized. No user ID found in token."});if(!r)return e.status(400).json({error:"Estoque ID is required."});if(!s)return e.status(400).json({error:"Name is required."});try{let{estoques:u}=await te(r,s,o);e.status(200).json({message:"Estoque name updated successfully.",estoque:{id:u.id,name:s}})}catch(u){e.status(500).json({error:u})}},ae=async(t,e)=>{let o=w(t.headers.authorization?.split(" ")[1]||""),{estoqueId:r}=t.params;if(!o)return e.status(401).json({error:"Unauthorized. No user ID found in token."});if(!r)return e.status(400).json({error:"Estoque ID is required."});try{let s=await oe(r,o);e.status(200).json({response:s})}catch(s){e.status(500).json({error:s})}};var l=Ae.Router();l.post("/",re);l.get("/",ne);l.get("/:estoqueId/products",H);l.get("/:estoqueId",ue);l.put("/:estoqueId",ie);l.delete("/:estoqueId",ae);l.post("/join",se);var de=l;import Te from"express";var q=Te.Router();q.post("/",W);q.get("/",O);q.get("/:productId/details",L);q.put("/:productId",$);q.delete("/:productId",G);q.patch("/:id/increment",M);q.patch("/:id/decrement",V);var ce=q;import Je from"express";import pe from"bcrypt";import{eq as me}from"drizzle-orm";import N from"jsonwebtoken";var b=process.env.JWT_SECRET||"default",le=async(t,e,o)=>{let r=await pe.hash(o,10),[s]=await a.insert(m).values({name:t,email:e,password:r}).returning(),u=N.sign({id:s.id,name:s.name},b,{expiresIn:"1h"});return{user:s,token:u}},qe=async(t,e)=>{let[o]=await a.select().from(m).where(me(m.email,t));if(!o)throw new Error("User not found");if(!await pe.compare(e,o.password))throw new Error("Invalid password");let s=N.sign({id:o.id,name:o.name},b,{expiresIn:"1h"});return{user:o,token:s}},fe=async t=>{if(!t)throw new Error("No token provided");try{let e=N.verify(t,b),[o]=await a.select().from(m).where(me(m.id,e.id));if(!o)throw new Error("User not found");return o}catch{throw new Error("Invalid token")}};var ge=async(t,e)=>{let{name:o,email:r,password:s}=t.body;if(!o||!r||!s)return e.status(400).json({error:"Name, email, and password are required."});try{let{user:u,token:g}=await le(o,r,s);e.status(201).json({user:{id:u.id,name:u.name,email:u.email},token:g})}catch(u){e.status(500).json({error:u})}},he=async(t,e)=>{let{email:o,password:r}=t.body;if(!o||!r)return e.status(400).json({error:"Email and password are required."});try{let{user:s,token:u}=await qe(o,r);e.status(200).json({user:{id:s.id,name:s.name,email:s.email},token:u})}catch(s){e.status(401).json({error:s})}},we=async(t,e)=>{let o=t.headers.authorization?.split(" ")[1];if(!o)return e.status(401).json({error:"No token provided."});try{let r=await fe(o);e.status(200).json({id:r.id,name:r.name,email:r.email})}catch(r){e.status(401).json({error:r})}};var P=Je.Router();P.post("/register",ge);P.post("/login",he);P.get("/profile",we);var ye=P;var y=Ee();y.use(Ee.json());y.use("/products",ce);y.use("/users",ye);y.use("/estoques",de);y.get("/",(t,e)=>{e.send("Hello World!")});var Ie=process.env.PORT||3e3;y.listen(Ie,()=>{console.log(`Server is running on port ${Ie}`)});
