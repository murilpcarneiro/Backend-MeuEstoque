import"dotenv/config";import Ee from"express";import Se from"express";import{jwtDecode as ze}from"jwt-decode";import{drizzle as je}from"drizzle-orm/node-postgres";import{Pool as Pe}from"pg";var Re=new Pe({connectionString:process.env.DATABASE_URL}),i=je(Re);import{and as j,eq as p}from"drizzle-orm";import{sql as ve}from"drizzle-orm";import{foreignKey as z,pgTable as A,uuid as E,varchar as S}from"drizzle-orm/pg-core";import{pgTable as xe,uuid as Ue,varchar as R}from"drizzle-orm/pg-core";var l=xe("users",{id:Ue("id").primaryKey().defaultRandom(),name:R("name",{length:255}).notNull(),email:R("email",{length:255}).notNull().unique(),password:R("password",{length:255}).notNull()});var c=A("estoques",{id:E("id").primaryKey().defaultRandom(),name:S("name",{length:255}).notNull(),codigo:S("codigo",{length:50}).notNull().unique().default(ve`floor(random()*9000 + 1000)::int`)}),n=A("estoque_users",{id:E("id").primaryKey().defaultRandom(),estoqueId:E("estoque_id").notNull(),userId:E("user_id").notNull()},t=>({fkEstoque:z({columns:[t.estoqueId],foreignColumns:[c.id],name:"fk_estoque_users_estoque"}),fkUser:z({columns:[t.userId],foreignColumns:[l.id],name:"fk_estoque_users_user"})}));import{foreignKey as Ne,integer as x,pgTable as be,uuid as D,varchar as U}from"drizzle-orm/pg-core";var u=be("produtos",{id:D("id").primaryKey().defaultRandom(),name:U("name",{length:255}).notNull(),image:U("image",{length:255}),barcode:U("barcode",{length:50}).unique(),price:x("price").notNull(),quantity:x("quantity").notNull().default(0),minStock:x("min_stock").notNull().default(0),estoqueId:D("estoque_id").notNull()},t=>({fkEstoque:Ne({columns:[t.estoqueId],foreignColumns:[c.id],name:"fk_produtos_estoque"})}));var T=async(t,e)=>{let[r]=await i.insert(c).values({name:t}).returning();return await i.insert(n).values({estoqueId:r.id,userId:e}),{estoque:r}},_=async(t,e)=>{let[r]=await i.select().from(c).where(p(c.codigo,t));if(!r)throw new Error("Estoque not found");let[o]=await i.select().from(n).where(j(p(n.estoqueId,r.id),p(n.userId,e)));if(o)throw new Error("User already joined this estoque");return await i.insert(n).values({estoqueId:r.id,userId:e}),{estoque:r}},J=async t=>({estoques:(await i.select().from(c).innerJoin(n,p(c.id,n.estoqueId)).where(p(n.userId,t)).orderBy(c.name)).map(r=>r.estoques)}),B=async(t,e)=>{let[r]=await i.select().from(c).innerJoin(n,p(c.id,n.estoqueId)).where(j(p(c.id,t),p(n.userId,e)));if(!r)throw new Error("Estoque not found or user not authorized");return r.estoques},Q=async(t,e,r)=>{let[o]=await i.select().from(c).innerJoin(n,p(c.id,t)).where(j(p(c.id,t),p(n.userId,r)));if(!o)throw new Error("Estoque not found or user not authorized");return await i.update(c).set({name:e}).where(p(c.id,o.estoques.id)),o},C=async(t,e)=>{let[r]=await i.select().from(c).innerJoin(n,p(c.id,n.estoqueId)).where(j(p(c.id,t),p(n.userId,e)));if(!r)throw new Error("Estoque not found or user not authorized");return await i.delete(n).where(p(n.estoqueId,r.estoques.id)),await i.delete(u).where(p(u.estoqueId,r.estoques.id)),await i.delete(c).where(p(c.id,r.estoques.id)),{message:"Estoque deleted successfully"}};var h=t=>ze(t).id,K=async(t,e)=>{let r=h(t.headers.authorization?.split(" ")[1]||""),{name:o}=t.body;if(!r)return e.status(401).json({error:"Unauthorized. No user ID found in token."});if(!o)return e.status(400).json({error:"Name is required."});try{let{estoque:s}=await T(o,r);e.status(201).json({id:s.id,name:s.name,codigo:s.codigo})}catch(s){e.status(500).json({error:"An error occurred while creating the stock.",errorMessage:s})}},M=async(t,e)=>{let r=h(t.headers.authorization?.split(" ")[1]||""),{codigo:o}=t.body;if(!r)return e.status(401).json({error:"Unauthorized. No user ID found in token."});if(!o)return e.status(400).json({error:"Codigo is required."});try{let{estoque:s}=await _(o,r);e.status(200).json({message:"Acesso concedido ao estoque",estoque:{id:s.id,name:s.name,codigo:s.codigo}})}catch(s){e.status(500).json({error:s.message})}},F=async(t,e)=>{let r=h(t.headers.authorization?.split(" ")[1]||"");if(!r)return e.status(401).json({error:"Unauthorized. No user ID found in token."});try{let{estoques:o}=await J(r);e.status(200).json({estoques:o})}catch(o){e.status(500).json({error:"An error occurred while fetching user stocks.",errorMessage:o})}},W=async(t,e)=>{let r=h(t.headers.authorization?.split(" ")[1]||""),{estoqueId:o}=t.params;if(!o)return e.status(400).json({error:"Estoque ID is required."});try{let s=await B(o,r);e.status(200).json({estoque:{id:s.id,name:s.name,codigo:s.codigo}})}catch{e.status(404).json({error:"Estoque not found."})}},O=async(t,e)=>{let r=h(t.headers.authorization?.split(" ")[1]||""),{estoqueId:o}=t.params,{name:s}=t.body;if(!r)return e.status(401).json({error:"Unauthorized. No user ID found in token."});if(!o)return e.status(400).json({error:"Estoque ID is required."});if(!s)return e.status(400).json({error:"Name is required."});try{let{estoques:a}=await Q(o,s,r);e.status(200).json({message:"Estoque name updated successfully.",estoque:{id:a.id,name:s}})}catch(a){e.status(500).json({error:"An error occurred while changing the stock name.",errorMessage:a})}},H=async(t,e)=>{let r=h(t.headers.authorization?.split(" ")[1]||""),{estoqueId:o}=t.params;if(!r)return e.status(401).json({error:"Unauthorized. No user ID found in token."});if(!o)return e.status(400).json({error:"Estoque ID is required."});try{let s=await C(o,r);e.status(200).json({response:s})}catch(s){e.status(500).json({error:"An error occurred while deleting the stock and its products.",errorMessage:s})}};var q=Se.Router();q.post("/",K);q.get("/",F);q.get("/:estoqueId",W);q.put("/:estoqueId",O);q.delete("/:estoqueId",H);q.post("/join",M);var L=q;import{jwtDecode as De}from"jwt-decode";import{and as w,eq as d}from"drizzle-orm";var $=async(t,e,r,o,s,a,f)=>{let[I]=await i.insert(u).values({name:t,image:e,barcode:r,price:o,quantity:s,minStock:a,estoqueId:f}).returning();if(!I)throw new Error("Failed to create product");return{product:I}},G=async t=>{let e=await i.select().from(u).innerJoin(n,d(u.estoqueId,n.estoqueId)).where(d(n.userId,t));if(e.length===0)throw new Error("No products found");return{products:e.map(r=>r.produtos)}},V=async(t,e)=>{let r=await i.select().from(u).innerJoin(n,d(u.estoqueId,n.estoqueId)).where(w(d(u.estoqueId,t),d(n.userId,e)));if(r.length===0)throw new Error("No products found for this estoque");return{products:r.map(o=>o.produtos)}},X=async(t,e)=>{let[r]=await i.select().from(u).innerJoin(n,d(u.estoqueId,n.estoqueId)).where(w(d(u.id,t),d(n.userId,e)));if(!r)throw new Error("Product not found or user not authorized");return{product:r.produtos}},Y=async(t,e,r)=>{if((await i.select().from(u).innerJoin(n,d(u.estoqueId,n.estoqueId)).where(w(d(u.id,t),d(n.userId,r))).limit(1)).length===0)throw new Error("Product not found or user not authorized");return{product:(await i.update(u).set(e).where(d(u.id,t)).returning())[0]}},Z=async(t,e)=>{if((await i.select().from(u).innerJoin(n,d(u.estoqueId,n.estoqueId)).where(w(d(u.id,t),d(n.userId,e))).limit(1)).length===0)throw new Error("Product not found or user not authorized");return await i.delete(u).where(d(u.id,t)),{message:"Product deleted successfully"}},ee=async(t,e,r)=>{let o=await i.select().from(u).innerJoin(n,d(u.estoqueId,n.estoqueId)).where(w(d(u.id,t),d(n.userId,r))).limit(1);if(o.length===0)throw new Error("Product not found or user not authorized");let s=o[0].produtos.quantity;return{product:(await i.update(u).set({quantity:s+Number(e)}).where(d(u.id,t)).returning())[0]}},te=async(t,e,r)=>{let o=await i.select().from(u).innerJoin(n,d(u.estoqueId,n.estoqueId)).where(w(d(u.id,t),d(n.userId,r))).limit(1);if(o.length===0)throw new Error("Product not found or user not authorized");let s=o[0].produtos.quantity;return{product:(await i.update(u).set({quantity:s-Number(e)}).where(d(u.id,t)).returning())[0]}};var g=t=>De(t).id,re=async(t,e)=>{let{name:r,image:o,barcode:s,price:a,quantity:f,minStock:I,estoqueId:b}=t.body;if(!r||!a||!f||!I||!b)return e.status(400).json({error:"Name, price, quantity, minStock, and estoqueId are required."});try{let{product:k}=await $(r,o,s,a,f,I,b);e.status(201).json({product:k})}catch{e.status(500).json({error:"An error occurred while creating the product."})}},oe=async(t,e)=>{let r=g(t.headers.authorization?.split(" ")[1]||"");if(!r)return e.status(400).json({error:"User ID is required."});try{let{products:o}=await G(r);e.status(200).json({products:o})}catch(o){e.status(500).json({error:o})}},se=async(t,e)=>{let{estoqueId:r}=t.params,o=g(t.headers.authorization?.split(" ")[1]||"");if(!r||!o)return e.status(400).json({error:"Estoque ID and User ID are required."});try{let{products:s}=await V(r,o);e.status(200).json({products:s})}catch{e.status(500).json({error:"An error occurred while fetching products."})}},ne=async(t,e)=>{let{productId:r}=t.params,o=g(t.headers.authorization?.split(" ")[1]||"");if(!r||!o)return e.status(400).json({error:"Product ID and User ID are required."});try{let s=await X(r,o);e.status(200).json({product:s})}catch{e.status(500).json({error:"An error occurred while fetching product information."})}},ue=async(t,e)=>{let{productId:r}=t.params,o=g(t.headers.authorization?.split(" ")[1]||""),s=t.body;if(!r||!o)return e.status(400).json({error:"Product ID and User ID are required."});try{let{product:a}=await Y(r,s,o);e.status(200).json({product:a})}catch{e.status(500).json({error:"An error occurred while updating product information."})}},ie=async(t,e)=>{let{productId:r}=t.params,o=g(t.headers.authorization?.split(" ")[1]||"");if(!r||!o)return e.status(400).json({error:"Product ID and User ID are required."});try{await Z(r,o),e.status(204).json({message:"Product deleted successfully."})}catch{e.status(500).json({error:"An error occurred while deleting the product."})}},ae=async(t,e)=>{let{id:r}=t.params,o=g(t.headers.authorization?.split(" ")[1]||""),{quantity:s}=t.body;if(!r||!o||s===void 0)return e.status(400).json({error:"Product ID, User ID, and quantity are required."});try{let{product:a}=await ee(r,s,o);e.status(200).json({product:a})}catch(a){console.error("Error incrementing product quantity:",a),e.status(500).json({error:"An error occurred while incrementing product quantity."})}},de=async(t,e)=>{let{id:r}=t.params,o=g(t.headers.authorization?.split(" ")[1]||""),{quantity:s}=t.body;if(!r||!o||s===void 0)return e.status(400).json({error:"Product ID, User ID, and quantity are required."});try{let{product:a}=await te(r,s,o);e.status(200).json({product:a})}catch{e.status(500).json({error:"An error occurred while decrementing product quantity."})}};import Te from"express";var m=Te.Router();m.post("/",re);m.get("/",oe);m.get("/:estoqueId",se);m.get("/:productId/details",ne);m.put("/:productId",ue);m.delete("/:productId",ie);m.patch("/:id/increment",ae);m.patch("/:id/decrement",de);var ce=m;import Je from"express";import pe from"bcrypt";import{eq as me}from"drizzle-orm";import v from"jsonwebtoken";var N=process.env.JWT_SECRET||"default",le=async(t,e,r)=>{let o=await pe.hash(r,10),[s]=await i.insert(l).values({name:t,email:e,password:o}).returning(),a=v.sign({id:s.id,name:s.name},N,{expiresIn:"1h"});return{user:s,token:a}},qe=async(t,e)=>{let[r]=await i.select().from(l).where(me(l.email,t));if(!r)throw new Error("User not found");if(!await pe.compare(e,r.password))throw new Error("Invalid password");let s=v.sign({id:r.id,name:r.name},N,{expiresIn:"1h"});return{user:r,token:s}},ge=async t=>{if(!t)throw new Error("No token provided");try{let e=v.verify(t,N),[r]=await i.select().from(l).where(me(l.id,e.id));if(!r)throw new Error("User not found");return r}catch{throw new Error("Invalid token")}};var fe=async(t,e)=>{let{name:r,email:o,password:s}=t.body;if(!r||!o||!s)return e.status(400).json({error:"Name, email, and password are required."});try{let{user:a,token:f}=await le(r,o,s);e.status(201).json({user:{id:a.id,name:a.name,email:a.email},token:f})}catch{e.status(500).json({error:"An error occurred while creating the user."})}},he=async(t,e)=>{let{email:r,password:o}=t.body;if(!r||!o)return e.status(400).json({error:"Email and password are required."});try{let{user:s,token:a}=await qe(r,o);e.status(200).json({user:{id:s.id,name:s.name,email:s.email},token:a})}catch(s){e.status(401).json({error:s.message})}},we=async(t,e)=>{let r=t.headers.authorization?.split(" ")[1];if(!r)return e.status(401).json({error:"No token provided."});try{let o=await ge(r);e.status(200).json({id:o.id,name:o.name,email:o.email})}catch(o){e.status(401).json({error:o.message})}};var P=Je.Router();P.post("/register",fe);P.post("/login",he);P.get("/profile",we);var ye=P;var y=Ee();y.use(Ee.json());y.use("/products",ce);y.use("/users",ye);y.use("/estoques",L);y.get("/",(t,e)=>{e.send("Hello World!")});var Ie=process.env.PORT||3e3;y.listen(Ie,()=>{console.log(`Server is running on port ${Ie}`)});
